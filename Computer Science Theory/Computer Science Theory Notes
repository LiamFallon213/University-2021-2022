# Computer Science Theory

## <a href="https://www.cs.montana.edu/yaw/teaching/338/main.html"> Course Schedule & syllabus </a>

---
## 8-31-2020

###  <a href=http://www.jflap.org/> JFLAP software </a>
Makes automata digitally
<br>

 > TA: **Danial Laden**
 Office hours: Wednesday 8:00 - 10:00 am in Barnard 259

### Finite state machine


#### Deterministic Finite Automata (DFA)
> **Deterministic**: The same input always results in the same events or outcome.

An example of a DFA is a Cellular Automata.

##### Characteristics of a DFA
* A single start states
* Multiple accept states
* Reject states (not accept states)
* DFA's either accept or reject strings

##### DFA String Processing
<br>

1. Start at start state

2. Select first character in string
3. Update state by following transition that corresponds to character
4. Select next character in string
5. Repeat 3 & 4 until end of string.
6. If final state is accept state, accept, otherwise reject

##### DFA rules
1. Finite set of states, **Q**
2. Finite alphabet, **∑**
  * Consists of transition characters (i.e. the characters in the strings that the DFA processes)
3. Transition function, **𝛿: Q X ∑ -> Q**
 * **𝛿: Q X ∑ -> Q** means that every state needs to handle every element of the alphabet, (every possible input), exactly one time. No contradictions.
4. Start State **q<sub>0</sub> ∈ Q**
5. Set of accept states, **F ⊆ Q**

##### Definitions
> The set of all strings a DFA, *M*, accepts is called its **Language**, *L(M)=A*
M **recognizes** A

>A language is **regular** if some DFA recognizes it.
*How do you prove a language is regular:* build a DFA for it

---
## 9-2-21

Send bad ideas to purgatory

---

## 9-14-21

### Regular Exceptions

- X* means any number of X's including 0.

 - (xy)* = any number of copies of xy


- X<sup>+</sup> = one or more X's

 - (XY)<sup>+</sup> = one or more (XY)'s

 - Concatanation works like implicit multiplicatior or iuses hollow dot like dot product.

 - U = or

 - ∩ = And
